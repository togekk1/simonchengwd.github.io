onmessage=async e=>{try{const t=JSON.parse(e.data),{db_version:o,database_name:r,objectstores:s}=Array.isArray(t)?t[0]:t,n=indexedDB.open(r,o);n.onsuccess=e=>{const o=e.target.result,a=o.transaction(s,"readwrite");function r(e){const{action:o,objectstore_name:r,key:t,value:s}=e,n=a.objectStore(r),c=[()=>n.get(t),()=>n.put(s,t),()=>n.count(),()=>n.getAll(),()=>n.delete(t)][o]();c.onsuccess=function(){var e=c.result;[0,2,3].includes(o)&&postMessage(2===o?e:JSON.stringify(e))},c.onerror=e=>{console.error(e)}}Array.isArray(t)?t.forEach(e=>{r(e)}):r(t),a.oncomplete=function(){o.close(),close()},a.onerror=function(e){console.error(e),o.close(),close()}},n.onerror=function(e){console.error(e),close()},n.onupgradeneeded=r=>{s.forEach(e=>{const o=r.target.result;o.objectStoreNames.contains(e)||o.createObjectStore(e)})}}catch(e){console.error(e),close()}};